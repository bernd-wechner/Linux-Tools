#!/bin/bash

# Find the scripts in the same directory or in the PATH
# Find the scripts in the same directory or in the PATH
find_script() {
    local script_name="$1"
    local script_path
    local script_dir=$(dirname "$0") # Get the directory of the script

    if [[ -f "$script_dir/$script_name" ]]; then
        script_path="$script_dir/$script_name"
    else
        script_path=$(command -v "$script_name")
    fi

    if [[ -z "$script_path" ]]; then
        echo "Error: $script_name not found." >&2
        return 1
    fi
    echo "$script_path"
}

# Parse command-line arguments
user_flag=""
while [[ $# -gt 0 ]]; do
    case "$1" in
        --user)
            user_flag="--user"
            shift
            ;;
        *)
            echo "Usage: $0 [--user]" >&2
            exit 1
            ;;
    esac
done

# Find the scripts
link_script=$(find_script "systemd-unitdir-link")
if [[ $? -ne 0 ]]; then exit 1; fi
edit_script=$(find_script "systemd-unitdir-edit")
if [[ $? -ne 0 ]]; then exit 1; fi

# Get the unit directories using both scripts
if [[ -n "$user_flag" ]]; then
    unit_dir_link=$("$link_script" "$user_flag")
    unit_dir_edit=$("$edit_script" "$user_flag")
else
    unit_dir_link=$("$link_script")
    unit_dir_edit=$("$edit_script")
fi

# Compare the results
if [[ "$unit_dir_edit" == "$unit_dir_link" ]]; then
    echo "$unit_dir_link"
else
    echo "$unit_dir_link"
    echo "$unit_dir_edit"
    echo "Warning: systemctl link and edit commands are using two different unit directories. Both reported." >&2
    exit 1
fi
